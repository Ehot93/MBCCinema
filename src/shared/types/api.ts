/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Вход пользователя
         * @description Аутентификация пользователя и получение JWT токена.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        username: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description JWT токен */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            token?: string;
                        };
                    };
                };
                /** @description Требуется имя пользователя и пароль */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Неверное имя пользователя или пароль */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Регистрация нового пользователя
         * @description Регистрация нового пользователя в системе.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        username: string;
                        password: string;
                    };
                };
            };
            responses: {
                /** @description Пользователь успешно зарегистрирован */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Требуется имя пользователя и пароль */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Имя пользователя уже существует */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Ошибка регистрации */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/bookings/{bookingId}/payments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Оплатить бронирование
         * @description Отмечает бронирование как оплаченное.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    bookingId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Бронирование успешно оплачено */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Бронирование успешно оплачено */
                            message?: string;
                        };
                    };
                };
                /** @description Бронирование не найдено. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Бронирование не найдено */
                            message?: string;
                        };
                    };
                };
                /** @description Бронирование уже оплачено. */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Бронирование уже оплачено */
                            message?: string;
                        };
                    };
                };
                /** @description Внутренняя ошибка сервера. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Ошибка при оплате бронирования */
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cinemas": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список кинотеатров
         * @description Возвращает список всех доступных кинотеатров.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Список кинотеатров */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Cinema[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cinemas/{cinemaId}/sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить сеансы для кинотеатра
         * @description Возвращает список всех доступных сеансов для указанного кинотеатра.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    cinemaId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Список киносеансов */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": MovieSession[];
                    };
                };
                /** @description Кинотеатр не найден */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список фильмов
         * @description Возвращает список всех доступных фильмов.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Список фильмов */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Movie[];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies/{movieId}/sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список киносеансов для фильма
         * @description Возвращает список всех доступных киносеансов для указанного фильма.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    movieId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Список киносеансов с фильмом */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": MovieSession[];
                    };
                };
                /** @description Фильм не найден */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movieSessions/{movieSessionId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить детали сеанса
         * @description Возвращает детальную информацию о сеансе, включая забронированные места.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    movieSessionId: number;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Детали киносеанса */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": MovieSessionDetails;
                    };
                };
                /** @description Сеанс не найден */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movieSessions/{movieSessionId}/bookings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Забронировать места на киносеанс
         * @description Бронирует указанные места на киносеанс для аутентифицированного пользователя.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    movieSessionId: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        seats?: Seat[];
                    };
                };
            };
            responses: {
                /** @description Бронирование успешно */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            bookingId?: string;
                        };
                    };
                };
                /** @description Неверное тело запроса */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Неавторизованный доступ */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Доступ запрещен */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Киносеанс не найден */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Места уже забронированы */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить настройки приложения
         * @description Возвращает текущие настройки приложения, включая время, в течение которого бронирование должно быть оплачено.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Настройки приложения */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Settings;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/me/bookings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Получить список бронирований пользователя
         * @description Возвращает список всех бронирований, сделанных текущим аутентифицированным пользователем.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Список бронирований пользователя */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": Booking[];
                    };
                };
                /** @description Неавторизованный доступ. Отсутствует или недействителен токен аутентификации. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
                /** @description Внутренняя ошибка сервера. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": ErrorResponse;
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
// User types
export interface User {
    /** @description Идентификатор пользователя */
    id?: number;
    /** @description Имя пользователя */
    name?: string;
    /** @description Хеш пароля */
    password_hash?: string;
}

// Movie types
export interface Movie {
    /** @description Идентификатор фильма */
    id?: number;
    /** @description Название фильма */
    title?: string;
    /** @description Описание фильма */
    description?: string;
    /** @description Год выпуска */
    year?: number;
    /** @description Продолжительность в минутах */
    lengthMinutes?: number;
    /** @description URL постера */
    posterImage?: string;
    /** @description Рейтинг */
    rating?: number;
}

export interface MovieSession {
    /** @description Идентификатор сеанса */
    id?: number;
    /** @description Идентификатор фильма */
    movieId?: number;
    /** @description Идентификатор кинотеатра */
    cinemaId?: number;
    /**
     * Format: date-time
     * @description Время начала сеанса
     */
    startTime?: string;
}

export interface MovieSessionWithSeats extends MovieSession {
    seats?: {
        /** @description Количество рядов */
        rows?: number;
        /** @description Количество мест в ряду */
        seatsPerRow?: number;
    };
}

export interface MovieSessionDetails extends MovieSessionWithSeats {
    bookedSeats?: Seat[];
}

// Cinema types
export interface Cinema {
    /** @description Идентификатор кинотеатра */
    id?: number;
    /** @description Название кинотеатра */
    name?: string;
    /** @description Адрес кинотеатра */
    address?: string;
}

// Booking types
export interface Seat {
    /** @description Номер ряда */
    rowNumber?: number;
    /** @description Номер места */
    seatNumber?: number;
}

export interface BookedSeat {
    /** @description Идентификатор бронирования */
    id?: string;
    /** @description Идентификатор сеанса */
    movieSessionId?: number;
    /** @description Идентификатор пользователя */
    userId?: number;
    /** @description Оплачено ли место */
    isPayed?: boolean;
    seats?: Seat[];
    /**
     * Format: date-time
     * @description Время бронирования
     */
    bookedAt?: string;
}

export interface Booking {
    /**
     * Format: uuid
     * @description Идентификатор бронирования
     */
    id?: string;
    /** @description Идентификатор пользователя */
    userId?: number;
    /** @description Идентификатор киносеанса */
    movieSessionId?: number;
    /** @description Идентификатор сеанса */
    sessionId?: number;
    /**
     * Format: date
     * @description Дата бронирования
     */
    bookedAt?: string;
    /** @description Забронированные места */
    seats?: Seat[];
    /** @description Статус оплаты */
    isPaid?: boolean;
}

// Error types
export interface ErrorResponse {
    /** @description Сообщение об ошибке */
    message?: string;
    /** @description Детали ошибки (опционально) */
    error?: string;
}

// Settings types
export interface Settings {
    /** @description Время в секундах, в течение которого бронирование должно быть оплачено */
    bookingPaymentTimeSeconds?: number;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
